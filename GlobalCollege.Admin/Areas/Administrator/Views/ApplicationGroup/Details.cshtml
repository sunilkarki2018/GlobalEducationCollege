@model GlobalCollege.Entity.DTO.ModuleSummary
@using GlobalCollege.Admin.Utility
@{
    Layout = this.Request.IsAjaxRequest() ? "" : "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
   
        @Html.Hidden("ParentId", Model.PrimaryRecordId)
         <div class="col-md-2">
            <a href="/Administrator/ApplicationGroup/Create" class="btn btn-success btn-flat btn-block margin-bottom">Add More</a>
            <div class="box box-solid">
                <div class="box-body no-padding">
                    <ul class="nav nav-pills nav-stacked" id="childTabInformation">
                        <li class="active"><a href="/Administrator/ApplicationGroup/Details" class="scopeChange" data-scope="parent"><i class="fa fa-hand-o-right"></i> @Model.ModuleSummaryTitle</a></li>
                        @foreach (var child in Model.ChildInformations.OrderBy(o=>o.OrderValue))
                        {
                            <li><a href="@child.Url" class="scopeChange" data-scope="child"><i class="fa fa-hand-o-right"></i> @child.ChildModuleSummaryTitle</a></li>
                        }

                    </ul>
                </div>
            </div>
        </div>   

    <div class="col-md-10" id="currentTabInformation">
        @using (Html.BeginForm("Update", Model.ModuleSummaryName, new { area = Model.SchemaName }, FormMethod.Post, new { @role = "form", @id = "mainForm", @autocomplete = "off", @enctype = "multipart/form-data" }))
        {
            @Html.Hidden("Id", Model.PrimaryRecordId)
            @Html.Hidden("CurrentAction", GlobalCollege.Entity.CurrentAction.Edit)
            foreach (var item in Model.moduleBussinesLogicSummaries.Where(x => x.HtmlDataType == "hidden"))
            {
                @Html.Hidden(item.ColumnName, item.CurrentValue)
            }

            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">@Model.ModuleSummaryTitle</h3>
                </div>
                <div class="box-body">
                    <div class="row">
                        @foreach (var item in Model.moduleBussinesLogicSummaries.Where(x => x.HtmlDataType != "hidden").OrderBy(c => c.Position))
                        {
                            if (item.HtmlDataType == "input")
                            {
                                <div class="form-group has-feedback col-lg-4">
                                    <label class="control-label" for="inputSuccess"> <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title="@item.HelpMessage"></i> @item.Name</label>
                                    @Html.TextBox(item.ColumnName, item.CurrentValue ?? item.DefaultValue, item.Attributes)
                                    <span class="field-validation-valid help-block" data-valmsg-for="@item.ColumnName" data-valmsg-replace="true"></span>
                                </div>
                            }
                            if (item.HtmlDataType == "password")
                            {
                                <div class="form-group has-feedback col-lg-4">
                                    <label class="control-label" for="inputSuccess"> <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title="@item.HelpMessage"></i> @item.Name </label>
                                    @Html.Password(item.ColumnName, item.CurrentValue ?? item.DefaultValue, item.Attributes)
                                    <span class="field-validation-valid help-block" data-valmsg-for="@item.ColumnName" data-valmsg-replace="true"></span>
                                </div>
                            }
                            if (item.HtmlDataType == "datalist")
                            {
                                <div class="form-group has-feedback col-lg-3">
                                    <label class="control-label" for="inputSuccess"> <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title="@item.HelpMessage"></i> @item.Name </label>
                                    @Html.DataList(item.ColumnName, null, item.CurrentValue, item.SelectList.Select(s => new SelectListItem() { Text = s.Text, Value = s.Value, Selected = s.Selected }), item.Attributes)
                                    <span class="field-validation-valid help-block" data-valmsg-for="@item.ColumnName" data-valmsg-replace="true"></span>
                                </div>
                            }
                            if (item.HtmlDataType == "textarea")
                            {
                                <div class="form-group has-feedback col-lg-12">
                                    <label class="control-label" for="inputSuccess"> <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title="@item.HelpMessage"></i> @item.Name</label>
                                    @Html.TextArea(item.ColumnName, item.CurrentValue as string ?? item.DefaultValue as string, 5, 20, item.Attributes)
                                    <span class="field-validation-valid help-block" data-valmsg-for="@item.ColumnName" data-valmsg-replace="true"></span>
                                </div>
                            }

                            if (item.HtmlDataType == "select")
                            {
                                <div class="form-group has-feedback col-lg-4">
                                    <label class="control-label" for="inputSuccess"><i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title="@item.HelpMessage"></i> @item.Name </label>
                                    @Html.DropDownList(item.ColumnName, item.SelectList.Select(s => new SelectListItem() { Text = s.Text, Value = s.Value, Selected = s.Selected }), "--Select--", item.Attributes)
                                    <span class="field-validation-valid help-block" data-valmsg-for="@item.ColumnName" data-valmsg-replace="true"></span>
                                </div>
                            }
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="box box-primary">
                                <h4 class="box-title"><i class="glyphicon glyphicon-list-alt"></i> Record Log</h4>
                                <hr class="message-inner-separator">
                                <div class="box-body table-responsive no-padding">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th nowrap>Record Status</th>
                                                <th nowrap>Created By</th>
                                                <th nowrap>Created Date</th>
                                                <th nowrap>Modified By</th>
                                                <th nowrap>Modified Date</th>
                                                <th nowrap>Authorise By</th>
                                                <th nowrap>Authorise Date</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>1</td>
                                                <td nowrap>@Model.RecordStatus</td>
                                                <td nowrap>@Model.CreatedBy</td>
                                                <td nowrap>@Model.CreatedDate</td>
                                                <td nowrap>@Model.ModifiedBy</td>
                                                <td nowrap>@Model.ModifiedDate</td>
                                                <td nowrap>@Model.AuthorisedBy</td>
                                                <td nowrap>@Model.AuthorisedDate</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                    @if (Model.RecordChangeLog != null)
                    {

                        <div class="row">
                            <div class="col-md-12">
                                <div class="box box-primary">
                                    <h4 class="box-title"><i class="glyphicon glyphicon-warning-sign"></i> Change Logs</h4>
                                    <hr class="message-inner-separator">
                                    <div class="box-body table-responsive no-padding">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Field Name</th>
                                                    <th>Log Status</th>
                                                    <th>Modified Date</th>
                                                    <th>Original Value</th>
                                                    <th>Modified Value</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{
                                                    int i = 1;
                                                    string _class = string.Empty;
                                                    foreach (var item in Model.RecordChangeLog.PropertyChangeLogs)
                                                    {

                                                        <tr class="primary">
                                                            <td scope="row"> @i </td>
                                                            <td> @item.PropertyName </td>
                                                            <td> @Model.RecordChangeLog.ChangeStatus.ToString()</td>
                                                            <td> @Model.RecordChangeLog.ChangeDate </td>
                                                            <td> @item.OldValue </td>
                                                            <td> @item.NewValue </td>

                                                        </tr>
                                                        i++;
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            </div>
                        </div>
                    }

                    <div class="row">
                        <p style="float:right">
                            @if (Model.RecordStatus == GlobalCollege.Entity.RecordStatus.Active || Model.ModifiedById == ViewUserInformation.GetCurrentUserId())
                            {
                                if (GlobalCollege.Admin.Utility.AuthorizeViewHelper.IsAuthorize(Model.SchemaName, Model.ModuleSummaryName, GlobalCollege.Entity.CurrentAction.Edit))
                                {
                                    <button class="btn icon-btn btn-success update saveRecords" type="submit" data-currentaction="@GlobalCollege.Entity.CurrentAction.Edit">
                                        <span class="glyphicon btn-glyphicon glyphicon glyphicon glyphicon-floppy-disk img-circle text-success">
                                        </span>Update Record
                                    </button>
                                }
                                if (GlobalCollege.Admin.Utility.AuthorizeViewHelper.IsAuthorize(Model.SchemaName, Model.ModuleSummaryName, GlobalCollege.Entity.CurrentAction.Delete))
                                {
                                    <button class="btn icon-btn btn-danger update saveRecords" type="submit" data-currentaction="@GlobalCollege.Entity.CurrentAction.Delete">
                                        <span class="glyphicon btn-glyphicon glyphicon glyphicon glyphicon-trash img-circle text-success">
                                        </span>Delete Record
                                    </button>
                                }
                            }

                            else if (Model.RecordStatus == GlobalCollege.Entity.RecordStatus.Unauthorized)
                            {
                                if (GlobalCollege.Admin.Utility.AuthorizeViewHelper.IsAuthorize(Model.SchemaName, Model.ModuleSummaryName, GlobalCollege.Entity.CurrentAction.Discard))
                                {
                                    <button class="btn icon-btn btn-warning revert saveRecords" type="submit" data-currentaction="@GlobalCollege.Entity.CurrentAction.Discard">
                                        <span class="glyphicon btn-glyphicon glyphicon glyphicon glyphicon-floppy-remove img-circle text-success">
                                        </span>Discard Changes
                                    </button>
                                }

                                if (GlobalCollege.Admin.Utility.AuthorizeViewHelper.IsAuthorize(Model.SchemaName, Model.ModuleSummaryName, GlobalCollege.Entity.CurrentAction.Authorise))
                                {
                                    <button class="btn icon-btn btn-warning revert saveRecords" type="submit" data-currentaction="@GlobalCollege.Entity.CurrentAction.Revert">
                                        <span class="glyphicon btn-glyphicon glyphicon glyphicon glyphicon-floppy-remove img-circle text-success">
                                        </span>Revert Changes
                                    </button>
                                }

                                if (GlobalCollege.Admin.Utility.AuthorizeViewHelper.IsAuthorize(Model.SchemaName, Model.ModuleSummaryName, GlobalCollege.Entity.CurrentAction.Authorise))
                                {
                                    <button class="btn icon-btn btn-success authorise saveRecords" type="submit" data-currentaction="@GlobalCollege.Entity.CurrentAction.Authorise">
                                        <span class="glyphicon btn-glyphicon glyphicon glyphicon glyphicon-floppy-saved img-circle text-success">
                                        </span>Authorise Changes
                                    </button>
                                }


                            }

                            @if (Model.IsParent)
                            {
                                <a href="/Administrator/ApplicationGroup" class="btn btn-primary btn-flat">
                                    <i class="fa  fa-hand-o-left"></i> Back to Summary
                                </a>
                            }
                            else
                            {
                                <a href="/Administrator/ApplicationGroup" class="btn btn-primary btn-flat" id="backtoSummary">
                                    <i class="fa  fa-hand-o-left"></i> Back to Summary
                                </a>
                            }

                        </p>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
